{"version":3,"sources":["providers/dataProvider.js","providers/authProvider.js","components/Dashboard.js","components/myFields/NotFound.js","components/Incomes.js","components/Expenses.js","components/UserList.js","components/App.js","index.js"],"names":["API_URL","type","resource","params","fetchJson","fetchUtils","GET_LIST","pagination","page","perPage","sort","query","_page","_limit","_sort","field","_order","order","q","filter","userId","url","stringify","GET_ONE","id","GET_MANY","ids","map","i","GET_MANY_REFERENCE","JSON","target","UPDATE","options","method","body","data","CREATE","DELETE","DELETE_MANY","Error","convertDataProviderRequestToHTTP","then","response","json","singleResource","total","length","convertHTTPResponseToDataProvider","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","status","reject","AUTH_CHECK","getItem","redirectTo","Card","CardHeader","title","CardContent","Title","IncomeActions","bulkActions","basePath","displayedFilters","filters","filterValues","onUnselectItems","selectedIds","showFilter","CardActions","React","cloneElement","context","CreateButton","IncomeFilter","props","Filter","TextInput","label","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","IncomePagination","setPage","Toolbar","Button","color","key","icon","onClick","labelposition","IncomeList","permissions","List","actions","Responsive","small","SimpleList","primaryText","record","incomeSource","secondaryText","incomeValue","tertiaryText","medium","Datagrid","rowClick","TextField","NumberField","ReferenceField","EditButton","ValidateUserCreation","values","errors","IncomeCreate","Create","SimpleForm","validate","redirect","NumberInput","LongTextInput","IncomeTitle","IncomeEdit","Edit","DisabledInput","ExpenseFilter","ExpensePagination","ExpenseList","value","ShowButton","ExpenseCreate","ExpenseTitle","expence","ExpenseEdit","undoable","ExpenseTitleShow","ExpenseShow","Show","SimpleShowLayout","optiontext","RichTextField","UserPanel","dangerouslySetInnerHTML","__html","about","UserList","firstName","email","expand","ChipField","DateField","EmailField","UserTitle","cardActionStyle","zIndex","display","float","UserShowActions","style","UserShow","TabbedShowLayout","Tab","validateEmail","UserEdit","DateInput","BooleanInput","MyLoginPage","Login","backgroundImage","history","createHistory","App","Admin","authProvider","dataProvider","dashboard","Dashboard","catchAll","NotFound","loginPage","Resource","name","list","Group","show","edit","create","AttachMoney","MoneyOff","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.986e12a1.chunk.js","sourcesContent":["import {\n    GET_LIST,\n    GET_ONE,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    CREATE,\n    UPDATE,\n    DELETE,\n    DELETE_MANY,\n    fetchUtils\n} from 'react-admin';\nimport { stringify } from 'query-string';\n\nconst API_URL = 'http://localhost:3001';\n\nconst convertDataProviderRequestToHTTP = (type, resource, params) => {\n    switch (type) {\n        case GET_LIST: {\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                _page: page,\n                _limit: perPage,\n                _sort: field,\n                _order: order,\n                q: params.filter.q,\n            };\n            if(params.filter.userId) {\n                query.userId = params.filter.userId\n            }\n            return { url: `${API_URL}/${resource}?${stringify(query)}` };\n        }\n        \n        case GET_ONE:\n            return { url: `${API_URL}/${resource}/${params.id}` };\n\n        case GET_MANY: {\n            let query = \"\";\n            query = params.ids.map( (id, i) => {\n                return query += \"&id=\" + params.ids[i];\n            })\n            return { url: `${API_URL}/${resource}?${query}` };\n        }\n\n        case GET_MANY_REFERENCE: {\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                sort: JSON.stringify([field, order]),\n                page: JSON.stringify([(page - 1) * perPage, (page * perPage) - 1]),\n                filter: JSON.stringify({ ...params.filter, [params.target]: params.id }),\n            };\n            return { url: `${API_URL}/${resource}?${stringify(query)}` };\n        }\n\n        case UPDATE:\n            return {\n                url: `${API_URL}/${resource}/${params.id}`,\n                options: { method: 'PUT', body: JSON.stringify(params.data) },\n            };\n\n        case CREATE:\n            return {\n                url: `${API_URL}/${resource}`,\n                options: { method: 'POST', body: JSON.stringify(params.data) },\n            };\n\n        case DELETE:\n            return {\n                url: `${API_URL}/${resource}/${params.id}`,\n                options: { method: 'DELETE' },\n            };\n\n        case DELETE_MANY:\n            const query = { filter: JSON.stringify({ id: params.ids }) };\n            return { \n                url: `${API_URL}/${resource}?${stringify(query)}`,\n                options: { method: 'DELETE' }\n            };\n\n        default:\n            throw new Error(`Unsupported fetch action type ${type}`);\n        }\n};\n\nconst convertHTTPResponseToDataProvider = (response, type, params) => {\n    const { json } = response;\n\n    switch (type) {\n        case GET_LIST:\n            return {\n                data: json.map(singleResource => singleResource),\n                total: json.length,\n            };\n        case CREATE:\n            return { data: { ...params.data, id: json.id } };\n        default:\n            return { data: json };\n    }\n};\n\n\nexport default (type, resource, params) => {\n    const { fetchJson } = fetchUtils;\n    const { url, options } = convertDataProviderRequestToHTTP(type, resource, params);\n    return fetchJson(url, options)\n        .then(response => convertHTTPResponseToDataProvider(response, type, params));\n};","import {\n    AUTH_LOGIN,\n    AUTH_LOGOUT,\n    AUTH_ERROR,\n    AUTH_CHECK\n} from 'react-admin';\n\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        return Promise.resolve();\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username') ? Promise.resolve() : Promise.reject({ redirectTo: '/no-access'});\n    }\n    return Promise.reject('Unknown method');\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to budgety app!\" />\n        <CardContent>\n            Here you can add incomes and expences in your budgety list.\n        </CardContent>\n    </Card>\n);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Title } from 'react-admin';\n\nexport default () => (\n    <Card>\n        <Title title=\"NotFound\" />\n        <CardContent>\n            <h1><i>404: Page not found, sorry :( </i></h1>\n        </CardContent>\n    </Card>\n);","import React from 'react';\nimport { \n    List,\n    Responsive,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    LongTextInput,\n    Edit,\n    DisabledInput,\n    Filter,\n    CardActions,\n    CreateButton,\n    NumberInput,\n    NumberField,\n} from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst IncomeActions = ({\n    bulkActions,\n    basePath,\n    displayedFilters,\n    filters,\n    filterValues,\n    onUnselectItems,\n    resource,\n    selectedIds,\n    showFilter,\n}) => (\n    <CardActions>\n        {bulkActions && React.cloneElement(bulkActions, {\n            basePath,\n            filterValues,\n            resource,\n            selectedIds,\n            onUnselectItems,\n        })}\n        {filters && React.cloneElement(filters, {\n            resource,\n            showFilter,\n            displayedFilters,\n            filterValues,\n            context: 'button',\n        }) }\n        <CreateButton basePath={basePath} />\n\n    </CardActions>\n);\n\nconst IncomeFilter = props => {\n    return (\n        <Filter { ...props }>\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\n            <ReferenceInput label=\"User's first name\" source=\"userId\" reference=\"users\" allowEmpty>\n                <SelectInput optionText=\"firstName\" />\n            </ReferenceInput>\n        </Filter>\n    );\n};\n\nconst IncomePagination = ({ page, total, setPage }) => {\n    return (\n        <Toolbar>\n            {page > 1 &&\n                <Button color=\"primary\" key=\"prev\" icon={<ChevronLeft />} onClick={() => setPage(page - 1)}>\n                    Prev\n                </Button>\n            }\n            {total &&\n                <Button color=\"primary\" key=\"next\" icon={<ChevronRight />} onClick={() => setPage(page + 1)} labelposition=\"before\">\n                    Next\n                </Button>\n            }\n        </Toolbar>\n    );\n};\n\nexport const IncomeList = ({ permissions, ...props }) => {\n    return (\n        <List \n            filters={ <IncomeFilter /> } \n            title=\"List of incomes\" \n            actions={ <IncomeActions permissions={permissions} /> }\n            perPage={5}\n            pagination={<IncomePagination />}\n            { ...props }\n        >\n            <Responsive\n                small={\n                    <SimpleList\n                        primaryText={ record => record.incomeSource }\n                        secondaryText={ record => record.incomeValue }\n                        tertiaryText={ record => record.id }\n                    />\n                }\n                medium={\n                    <Datagrid rowClick=\"edit\">\n                        <TextField label=\"Income ID\" source=\"id\"/>\n                        <TextField label=\"Income source\" source=\"incomeSource\" />\n                        <NumberField label=\"Income value\" source=\"incomeValue\" />\n                        <ReferenceField source=\"userId\" reference=\"users\" >\n                                <TextField label=\"User's first name\" source=\"firstName\" />\n                        </ReferenceField>\n                        <EditButton />\n                    </Datagrid>\n                }\n            />\n        </List>\n    );\n};\n\nconst ValidateUserCreation = (values) => {\n    const errors = {};\n    if(!values.incomeSource) {\n        errors.incomeSource = ['The income source is required!'];\n    }\n    if(!values.incomeValue) {\n        errors.incomeValue = ['The income value id required!'];\n    }\n    return errors\n};\n\nexport const IncomeCreate = props => {\n    return (\n        <Create { ...props }>\n            <SimpleForm validate={ValidateUserCreation} redirect=\"list\">\n                <ReferenceInput source=\"userId\" reference=\"users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source=\"incomeSource\" />\n                <NumberInput source=\"incomeValue\" />\n                <LongTextInput source=\"income.description\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\nexport const IncomeTitle = ({ record }) => {\n    return(\n        <span>Post { record ? `\"${record.incomeSource}\" ` : '' }</span>\n    );\n};\n\nexport const IncomeEdit = props => {\n    return (\n        <Edit title={ <IncomeTitle /> } { ...props }>\n            <SimpleForm>\n                <DisabledInput source=\"id\" />\n                <ReferenceInput source=\"userId\" reference=\"users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source=\"incomeSource\" />\n                <NumberInput source=\"incomeValue\" />\n                <LongTextInput source=\"income.description\" />\n            </SimpleForm>\n        </Edit>\n    );\n};","import React from 'react';\nimport { \n    List,\n    Responsive,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    LongTextInput,\n    NumberField,\n    NumberInput,\n    Edit,\n    DisabledInput,\n    Filter,\n    Show,\n    SimpleShowLayout,\n    RichTextField,\n    ShowButton,\n} from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nconst ExpenseFilter = props => {\n    return (\n        <Filter { ...props }>\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\n            <ReferenceInput label=\"User's first name\" source=\"userId\" reference=\"users\" allowEmpty>\n                <SelectInput optionText=\"firstName\" />\n            </ReferenceInput>\n        </Filter>\n    )\n}\n\nconst ExpensePagination = ({ page, total, setPage }) => {\n    return (\n        <Toolbar>\n            {page > 1 &&\n                <Button color=\"primary\" key=\"prev\" icon={<ChevronLeft />} onClick={() => setPage(page - 1)}>\n                    Prev\n                </Button>\n            }\n            {total &&\n                <Button color=\"primary\" key=\"next\" icon={<ChevronRight />} onClick={() => setPage(page + 1)} labelposition=\"before\">\n                    Next\n                </Button>\n            }\n        </Toolbar>\n    );\n};\n\nexport const ExpenseList = ({ ...props }) => {\n    return (\n        <List \n            filters={ <ExpenseFilter /> } \n            title=\"List of expences\" \n            filter={{ title: true }}\n            perPage={5}\n            pagination={<ExpensePagination />}\n            { ...props }\n        >\n            <Responsive\n                small={\n                    <SimpleList\n                        primaryText={ record => record.title }\n                        secondaryText={ record => record.value }\n                        tertiaryText={ record => record.id }\n                    />\n                }\n                medium={\n                    <Datagrid>\n                        <TextField label=\"Expense ID\" source=\"id\" />\n                        <TextField label=\"Expense\" source=\"title\"  />\n                        <NumberField label=\"Expense value\" source=\"value\" />\n                        <ReferenceField source=\"userId\" reference=\"users\">\n                            <TextField label=\"User's first name\" source=\"firstName\" />\n                        </ReferenceField>\n                        <EditButton />\n                        <ShowButton/>\n                    </Datagrid>\n                }\n            />\n        </List>\n    );\n};\n\nexport const ExpenseCreate = props => {\n    return (\n        <Create { ...props } redirect=\"list\">\n            <SimpleForm>\n                <ReferenceInput source=\"userId\" reference=\"users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source=\"title\" />\n                <NumberInput source=\"value\" />\n                <LongTextInput source=\"description\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\nexport const ExpenseTitle = ({ record }) => {\n    return(\n        <span>Post { record ? `\"${record.expence}\" ` : '' }</span>\n    );\n};\n\nexport const ExpenseEdit = props => {\n    return (\n        <Edit title={ <ExpenseTitle /> } undoable={false} { ...props }>\n            <SimpleForm>\n                <DisabledInput source=\"id\" />\n                <ReferenceInput source=\"userId\" reference=\"users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source=\"title\" />\n                <TextInput source=\"value\" />\n                <LongTextInput source=\"description\" />\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst ExpenseTitleShow = ({ record }) => {\n    return (\n        <span>About expense - { record ? `${record.title}` : ''}</span>\n    )\n};\n\nexport const ExpenseShow = props => {\n    return (\n        <Show title={ <ExpenseTitleShow /> } { ...props }>\n            <SimpleShowLayout>\n                <TextField source=\"id\" />\n                <TextField source=\"title\" />\n                <NumberField source=\"value\" />\n                <ReferenceField source=\"userId\" reference=\"users\">\n                    <TextField optiontext=\"firstName\" />\n                </ReferenceField>\n                <RichTextField source=\"description\" />\n            </SimpleShowLayout>\n        </Show>\n    )\n}","import React from 'react';\nimport {\n    List,\n    Responsive,\n    SimpleList,\n    Datagrid,\n    TextField,\n    EmailField,\n    NumberField,\n    Show,\n    DateField,\n    RichTextField,\n    ShowButton,\n    TabbedShowLayout,\n    Tab,\n    ChipField,\n    Edit,\n    TextInput,\n    NumberInput,\n    DateInput,\n    BooleanInput,\n    SimpleForm,\n    EditButton,\n    email\n} from 'react-admin';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst UserPanel = ({ id, record }) => (\n    <div dangerouslySetInnerHTML={{ __html: record.about }} />\n);\n\nexport const UserList = (props) => {\n    return (\n        <List { ...props } title=\"List of users\" pagination={ false } >\n            <Responsive \n                small={\n                    <SimpleList\n                        primaryText={ record => record.firstName }\n                        secondaryText={ record => record.email }\n                    />\n                }\n                medium={\n                    <Datagrid expand={ <UserPanel /> } rowClick=\"edit\" >\n                        <TextField source=\"id\" />\n                        <TextField source=\"firstName\" />\n                        <TextField source=\"lastName\" />\n                        <ChipField label=\"Occupation\" source=\"occupation\" />\n                        <DateField source=\"born\" />\n                        <EmailField source=\"email\" />\n                        <NumberField source=\"phone\" />\n                        <ShowButton />\n                    </Datagrid>\n                }\n            />\n        </List>\n    )\n};\n\nconst UserTitle = ({ record }) => {\n    return (\n        <span>About user - { record ? `${record.email}` : ''}</span>\n    )\n};\n\nconst cardActionStyle = {\n    zIndex: 2,\n    display: 'inline-block',\n    float: 'right',\n};\n\nconst UserShowActions = ({ basePath, data }) => {\n    return (\n        <CardActions style={cardActionStyle}>\n            <EditButton basePath={basePath} record={data} />\n            <Button color=\"primary\">Custom Action</Button>\n        </CardActions>\n    )\n}\n\nexport const UserShow = ({  ...props }) => {\n    return (\n        <Show \n            title={ <UserTitle /> } \n            actions={ <UserShowActions /> }\n            { ...props }\n        >\n            <TabbedShowLayout>\n                <Tab label=\"summary\">\n                    <TextField label=\"First name:\" source=\"firstName\" />\n                    <TextField label=\"Last name:\" source=\"lastName\" />\n                    <EmailField label=\"Email:\" source=\"email\" />\n                    <TextField label=\"Phone number:\" source=\"phone\" />\n                    <DateField label=\"Birth date:\" source=\"born\" />\n                    <ChipField label=\"Occupation\" source=\"occupation\" />\n                </Tab>\n                <Tab label=\"About\">\n                    <RichTextField label=\"About user:\"  source=\"about\" />\n                </Tab>\n            </TabbedShowLayout>\n        </Show>\n    )\n};\n\nconst validateEmail = email();\n\nexport const UserEdit = props => {\n    return (\n        <Edit title={ <UserTitle /> } undoable={false} redirect=\"list\" { ...props }>\n            <SimpleForm>\n                <TextInput source=\"id\" />\n                <TextInput source=\"firstName\" />\n                <TextInput source=\"lastName\" />\n                <ChipField source=\"occupation\" />\n                <DateInput source=\"born\" />\n                <TextInput source=\"email\" validate={validateEmail} />\n                <NumberInput source=\"phone\" />\n                <BooleanInput source=\"commentable\" />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\n","import React from 'react';\nimport { Admin, Resource, Login } from 'react-admin';\nimport { Group, AttachMoney, MoneyOff } from '@material-ui/icons';\nimport { createBrowserHistory as createHistory } from 'history';\n\nimport dataProvider from '../providers/dataProvider';\nimport authProvider from '../providers/authProvider';\nimport Dashboard from './Dashboard';\nimport NotFound from './myFields/NotFound';\n\nimport { IncomeList, IncomeCreate, IncomeEdit } from './Incomes';\nimport { ExpenseList, ExpenseCreate, ExpenseEdit, ExpenseShow } from './Expenses';\nimport { UserList, UserShow, UserEdit } from './UserList';\n\nconst MyLoginPage = () => <Login backgroundImage=\"./background.jpg\"  />\nconst history = createHistory();\n\nconst App = () => {\n    return (\n        <Admin \n            authProvider={ authProvider } \n            dataProvider={ dataProvider } \n            dashboard={ Dashboard } \n            title=\"Budgety\" \n            catchAll={ NotFound } \n            loginPage={ MyLoginPage }\n            history={ history }\n        >\n            <Resource \n                name=\"users\" \n                list={ UserList } \n                icon={ Group } \n                show={ UserShow } \n                edit={ UserEdit }\n            />\n            <Resource \n                name=\"incomes\" \n                list={ IncomeList } \n                create={ IncomeCreate } \n                edit={ IncomeEdit} \n                icon={ AttachMoney } \n            />\n            <Resource \n                name=\"expenses\" \n                show={ ExpenseShow } \n                list={ ExpenseList } \n                create={ ExpenseCreate } \n                icon={ MoneyOff } \n                edit={ ExpenseEdit }  \n            />\n        </Admin>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}